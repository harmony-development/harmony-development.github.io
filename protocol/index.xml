<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Protocols on Harmony</title>
    <link>https://harmonyapp.io/protocol/</link>
    <description>Recent content in Protocols on Harmony</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://harmonyapp.io/protocol/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://harmonyapp.io/protocol/guidelines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://harmonyapp.io/protocol/guidelines/</guid>
      <description>Guidelines Protocol endpoints adhere to the following standard naming conventions:
  All actions being applied must be prefixed.
❌ What not to do:
 rpc ProfileUpdate(ProfileUpdateRequest) returns (ProfileUpdateResponse) {}  ✅ What to do:
 rpc UpdateProfile(UpdateProfileRequest) returns (UpdateProfileResponse) {}    Objects (types that aren&amp;rsquo;t request or response types) should go at the top of the file.
  Objects should not be nested inside request or response types.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://harmonyapp.io/protocol/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://harmonyapp.io/protocol/readme/</guid>
      <description>Harmony Protocol This is the repository containing the Harmony protocol specification and documentation.
Read here for frequently asked questions.
To read about protocol conventions, please read GUIDELINES.
If you are looking for:
 a client to communicate with, check out Tempest, Challah or Crust. a server to host, check out Scherzo. an SDK to develop bots / clients / servers with, check out Rust SDK, Web SDK and C++ SDK.  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://harmonyapp.io/protocol/rest/rest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://harmonyapp.io/protocol/rest/rest/</guid>
      <description>RESTful Endpoints Authentication If an endpoint expects authentication, the user should set the Authorization header to a valid token from the gRPC API.
POST /_harmony/media/upload Expects authentication: yes
The body should be POST-ed as a multipart form (multipart/form-data), with a single part named file which contains the body of the file being uploaded.
URL Parameters  filename: The name of the file being uploaded. contentType: The MIME type of the file.</description>
    </item>
    
    <item>
      <title>Harmony FAQ</title>
      <link>https://harmonyapp.io/protocol/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://harmonyapp.io/protocol/faq/</guid>
      <description>What is Harmony? A chat protocol which:
 is split into communities which contain channels which contain messages is defined entirely within the Protobuf format, using a simple RPC mechanism called hRPC.  What are the design goals of Harmony? Harmony&amp;rsquo;s protocol is designed to be as straightforward and pragmatic as possible. We do not make attempts at creating a &amp;ldquo;universal&amp;rdquo; design philosophy which the entire protocol is forced to follow, instead implementing things that make sense as a single cohesive system.</description>
    </item>
    
    <item>
      <title>Permissions</title>
      <link>https://harmonyapp.io/protocol/chat/v1/permissions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://harmonyapp.io/protocol/chat/v1/permissions/</guid>
      <description>The permissions system of Harmony resembles that of the permissions system common to open-source Minecraft server software, featuring rules and querying a node string against those rules.
Permission In a community, there will be features, management functionality, bot commands, and other things which exist. Most of these actions have a permission associated with them, allowing you to control which members have access to each feature.
A permission is just a string, such as roles.</description>
    </item>
    
    <item>
      <title>Server Name Resolution</title>
      <link>https://harmonyapp.io/protocol/name-resolution/name-resolution/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://harmonyapp.io/protocol/name-resolution/name-resolution/</guid>
      <description>Every Harmony homeserver is identified by a &amp;ldquo;server name.&amp;rdquo; A server name uniquely identifies a server, regardless of whether the resolved IP address changes or not. Two server names pointing to the same IP address would be considered two different homeservers.
A server name is resolved to an IP address and port using the following process:
When IP Address (xxx.xxx.xxx.xxx + optional :port) When the server name is an IP address, this is the resolved IP of the server that requests should be sent to.</description>
    </item>
    
  </channel>
</rss>
